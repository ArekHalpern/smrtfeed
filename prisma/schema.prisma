generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Paper {
  id            String   @id @default(uuid())
  title         String
  authors       Json // Will store an array of Author objects
  keywords      String[]
  key_insights  Json // Will store an array of Insight objects
  conclusion    String?
  datePublished DateTime
  url           String?
  diagrams      String[] // Add this line to store an array of diagram URLs or references
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Document {
  id        Int      @id @default(autoincrement())
  source    String   @db.VarChar(500)
  content   String   @db.Text // Add this line
  createdAt DateTime @default(now()) @map("created_at")
  pages     Page[]
}

model Page {
  id         Int        @id @default(autoincrement())
  documentId Int        @map("document_id")
  pageNumber Int        @map("page_number")
  document   Document   @relation(fields: [documentId], references: [id])
  sentences  Sentence[]
  Line       Line[]
}

model Sentence {
  id             Int    @id @default(autoincrement())
  pageId         Int    @map("page_id")
  sentenceNumber Int    @map("sentence_number")
  content        String @db.Text
  page           Page   @relation(fields: [pageId], references: [id])
}

model Line {
  id         Int    @id @default(autoincrement())
  pageId     Int    @map("page_id")
  lineNumber Int    @map("line_number")
  content    String @db.Text
  page       Page   @relation(fields: [pageId], references: [id])
}
