import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Button } from "@/components/ui/button";
import { Copy, RefreshCw } from "lucide-react";
import { useState } from "react";
import { motion } from "framer-motion";

interface TweetProps {
  id: number;
  content: string;
  timestamp: string;
  onRefreshInsights: (id: number) => void;
}

export function Tweet({
  id,
  content,
  timestamp,
  onRefreshInsights,
}: TweetProps) {
  const [copied, setCopied] = useState(false);
  const [isRefreshing, setIsRefreshing] = useState(false);

  const handleCopy = () => {
    navigator.clipboard.writeText(content);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  const handleRefreshInsights = async () => {
    setIsRefreshing(true);
    await onRefreshInsights(id);
    setIsRefreshing(false);
  };

  // Update the content parsing
  const titleMatch = content.match(/"([^"]+)"/);
  const dateMatch = content.match(/Published: (\d{4}-\d{2}-\d{2})/);
  const urlMatch = content.match(/URL: (https?:\/\/[^\s]+)/);
  const generatedByMatch = content.match(/Overview Generated By SmrtFeed AI/);
  const authorsMatch = content.match(/Authors: (.+)/);
  const title = titleMatch ? titleMatch[1] : "Untitled";
  const datePublished = dateMatch ? dateMatch[1] : "Unknown date";
  const url = urlMatch ? urlMatch[1] : "";
  const generatedBy = generatedByMatch ? generatedByMatch[0] : "";
  const authors = authorsMatch ? authorsMatch[1] : "";

  // Remove title, date, URL, authors, and the new line from the main content
  const mainContent = content
    .replace(/"([^"]+)"\nPublished: \d{4}-\d{2}-\d{2}\n\n/, "")
    .replace(/\nURL: https?:\/\/[^\s]+/, "")
    .replace(/\nAuthors: .+/, "")
    .replace(/\nOverview Generated By SmrtFeed AI/, "");

  return (
    <motion.div
      initial={{ opacity: 0, y: 50, scale: 0.9 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      transition={{
        duration: 0.5,
        ease: [0.6, -0.05, 0.01, 0.99],
        scale: {
          type: "spring",
          damping: 15,
          stiffness: 300,
          restDelta: 0.001,
        },
      }}
      className="border rounded-lg p-3 md:p-4 bg-card text-card-foreground shadow-lg"
    >
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.2, duration: 0.5 }}
        className="flex flex-col md:flex-row md:items-start gap-3 md:gap-4"
      >
        <Avatar className="w-10 h-10 md:w-12 md:h-12">
          <AvatarImage
            alt="SmrtFeed Assistant"
            src={`https://ui-avatars.com/api/?name=SmrtFeed+Assistant&background=random`}
          />
          <AvatarFallback>SF</AvatarFallback>
        </Avatar>
        <div className="flex-1">
          <div className="flex flex-col md:flex-row md:items-center justify-between">
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.3, duration: 0.5 }}
              className="flex flex-col"
            >
              <span className="text-xs md:text-sm text-muted-foreground">
                @smrtfeed Â· {timestamp}
              </span>
            </motion.div>
            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.4, duration: 0.5 }}
              className="flex items-center gap-2 mt-2 md:mt-0"
            >
              <Button
                size="sm"
                variant="ghost"
                onClick={handleRefreshInsights}
                disabled={isRefreshing}
              >
                <RefreshCw
                  className={`w-3 h-3 md:w-4 md:h-4 ${
                    isRefreshing ? "animate-spin" : ""
                  }`}
                />
                <span className="sr-only">Refresh insights</span>
              </Button>
              <Button size="sm" variant="ghost" onClick={handleCopy}>
                <Copy className="w-3 h-3 md:w-4 md:h-4" />
                <span className="sr-only">Copy tweet</span>
              </Button>
              {copied && (
                <motion.span
                  initial={{ opacity: 0, scale: 0.5 }}
                  animate={{ opacity: 1, scale: 1 }}
                  exit={{ opacity: 0, scale: 0.5 }}
                  className="text-xs md:text-sm text-muted-foreground"
                >
                  Copied!
                </motion.span>
              )}
            </motion.div>
          </div>
          <motion.h3
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.5, duration: 0.5 }}
            className="font-semibold mt-2 text-sm md:text-base"
          >
            {title}
          </motion.h3>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.6, duration: 0.5 }}
            className="text-xs md:text-sm text-muted-foreground"
          >
            Published: {datePublished}
          </motion.p>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.7, duration: 0.5 }}
            className="mt-1 whitespace-pre-wrap break-words text-sm md:text-base"
          >
            {mainContent}
          </motion.p>
          {authors && (
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.8, duration: 0.5 }}
              className="mt-2 text-sm text-muted-foreground"
            >
              Authors: {authors}
            </motion.p>
          )}
          {url && (
            <motion.a
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.9, duration: 0.5 }}
              href={url}
              target="_blank"
              rel="noopener noreferrer"
              className="mt-2 inline-block text-sm text-blue-500 hover:underline"
            >
              Link to paper
            </motion.a>
          )}
          {generatedBy && (
            <motion.p
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 1.0, duration: 0.5 }}
              className="mt-2 text-xs text-muted-foreground"
            >
              {generatedBy}
            </motion.p>
          )}
        </div>
      </motion.div>
    </motion.div>
  );
}
